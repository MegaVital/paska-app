{"version":3,"sources":["routerTypes.ts","reportWebVitals.ts","redux/hooks.ts","service.helper.ts","components/CatalogueItem.tsx","redux/cartReducer.ts","redux/dataReducer.ts","components/FilterField.tsx","redux/tokenReducer.ts","redux/pageReducer.ts","components/PaginationHook.tsx","components/OrderButton.tsx","Pages/Catalogue.tsx","components/OrderItem.tsx","Pages/Order.tsx","Pages/Login.tsx","Pages/Product.tsx","Pages/Registration.tsx","components/Time.tsx","components/Hooks.tsx","redux/themeReducer.ts","components/Header.tsx","Router.tsx","redux/store.ts","index.tsx"],"names":["AppRoutes","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","useAppDispatch","useDispatch","useAppSelector","useSelector","getDesignTokens","createContext","toggleColorMode","mode","palette","Object","objectSpread","primary","red","text","secondary","grey","background","paper","deepOrange","changeCartContaining","isElementQuantitySingle","isDeleting","cartIndex","filter","name","contain","CatalogueItem","title","description","brand","price","material","changeTotalValue","id","image","goProduct","itemTotalPrice","reducerTheme","state","persistedReducer","themeSlice","quantity","element","cartSlice","find","el","theme","createTheme","react_default","a","createElement","Card","raised","variant","sx","width","height","CardActions","onClick","justifyContent","Button","src","CardContent","Typography","style","fontWeight","whiteSpace","textOverflow","overflow","fontSize","marginBottom","Tooltip","color","WebkitLineClamp","WebkitBoxOrient","display","join","main","Box","flexDirection","size","p","m","alignItems","placement","IconButton","aria-label","AddShoppingCart_default","createSlice","initialState","reducers","addItemToCart","action","push","payload","addQuantity","index","deleteItemFromCart","splice","reduceQuantity","deleteItem","shift","clearCartSlice","length","actions","initialFilters","Brand","Size","Material","data","search","sort","dataSlice","addData","toConsumableArray","max","Math","apply","map","min","addFilter","propertyName","includes","containName","indexOf","addPrice","filterShift","searchTitleReducer","clearDataSlice","FilterComponent","dispatcher","filteredData","dataPrice","_useState","useState","_useState2","slicedToArray","slider","setSlider","filterItem","margin","padding","key","Accordion","AccordionSummary","expandIcon","ExpandMore_default","aria-controls","List","ListItem","disablePadding","ListItemText","checkboxName","AccordionDetails","FormControlLabel","label","control","Checkbox","checked","onChange","Slider","disableSwap","getAriaLabel","valueLabelDisplay","event","newPrice","value","justifySelf","Grid","mt","ml","tokenSlice","currentToken","isAuth","addToken","deleteToken","pageSlice","page","items","currentPage","itemsPerPage","usePagination","contentPerPage","count","setPage","pageInReducer","navigate","useNavigate","pageCount","ceil","lastContentIndex","changePage","direction","newPage","concat","totalPages","nextPage","prevPage","num","firstContentIndex","OrderButton","cart","ORDER","ShoppingCart_default","mr","noWrap","component","sum","forEach","cartEntry","dataElement","totalPrice","Catalogue","_useAppSelector","tokenUser","tokenState","_useAppSelector2","setSort","serverData","_state$persistedReduc","dataMaterial","result","materialCheck","toLocaleLowerCase","toString","b","_usePagination","_useState3","_useState4","isLoading","setIsLoading","getData","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","axios","get","headers","Content-Type","Authorization","response","newToken","split","stop","this","arguments","useEffect","findIndex","currentCatalogueEntry","currentCartEntry","CircularProgress","pl","pt","container","columns","minWidth","md","FormControl","mx","InputLabel","Select","target","MenuItem","FilterField_FilterComponent","OrderButton_OrderButton","MoodBadSharp_default","Fragment","spacing","slice","item","CatalogueItem_CatalogueItem","assign","flexWrap","mb","disabled","Array","keys","alignSelf","marginRight","xs","OrderItem","open","setOpen","Delete_default","Dialog","onClose","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","Order","textAlign","OrderItem_OrderItem","Divider","my","require","default","clientId","Login","useTheme","errorText","setErrorText","nameOrEmail","password","logInFields","setLogInFields","handleLogInFieldsInput","fieldValue","defineProperty","_useState5","_useState6","showPassword","setShowPassword","gapi","load","auth2","init","scope","onSuccess","email","post","google_id","jwtData","JWT","verify","exp","iat","catch","error","message","_x","maxWidth","TextField","inputProps","WebkitBoxShadow","type","InputProps","endAdornment","InputAdornment","position","onMouseDown","Visibility","VisibilityOff","Snackbar","anchorOrigin","vertical","horizontal","Alert","severity","login","google_login","buttonText","onFailure","cookiePolicy","REGISTRATION","Product","params","useParams","productID","WebkitBoxAlign","salt","bcrypt","genSaltSync","Registration","passwordCheck","registrationFields","setRegistrationFields","handleRegistrationFieldsInput","_useState7","_useState8","showPasswordCheck","setShowPasswordCheck","validateEmail","test","validatePass","pass","_useState9","_useState10","blur","setBlur","onBlur","fontStyle","backgroundColor","hover","hashSync","LOGIN","Time","time","setTime","setInterval","Date","toLocaleTimeString","lg","toLocaleDateString","useDebounce","delay","debouncedValue","setDebouncedValue","timer","setTimeout","clearTimeout","currentTheme","Search","styled","borderRadius","shape","alpha","common","white","&:hover","marginLeft","breakpoints","up","SearchIconWrapper","_ref3","pointerEvents","StyledInputBase","InputBase","_ref4","& .MuiInputBase-input","paddingLeft","Header","nav","useLocation","searchTitle","setSearchTitle","logOut","pathname","react","AppBar","className","Toolbar","DarkModeSharp_default","LightMode_default","Home_default","Link","flexGrow","currentHeadLine","Time_Time","Header_Search","Search_default","placeholder","disableScrollLock","Router","ThemeProvider","CssBaseline","Header_Header","react_router","path","to","replace","Login_Login","Registration_Registration","CATALOGUE","Catalogue_Catalogue","Order_Order","PRODUCT","Product_Product","persistConfig","storage","version","rootReducer","combineReducers","persistReducer","store","configureStore","reducer","persistor","persistStore","document","getElementById","createRoot","render","es","integration_react","loading","react_router_dom"],"mappings":"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","file":"static/js/main.c8f443af.chunk.js","sourcesContent":["export enum AppRoutes {\r\n    LOGIN = '/',\r\n    REGISTRATION = '/registration',\r\n    CATALOGUE = '/catalogue',\r\n    ORDER = '/order',\r\n    PRODUCT = \"/product\",\r\n}","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { RootState, AppDispatch } from './store';\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import { PaletteMode } from \"@mui/material\";\r\nimport { createContext } from \"react\";\r\nimport { grey, deepOrange, red } from '@mui/material/colors';\r\nexport const ColorModeContext = createContext({\r\n    toggleColorMode: () => {\r\n        // This is intentional\r\n    },\r\n});\r\n\r\nexport const getDesignTokens = (mode: PaletteMode) => ({\r\n    palette: {\r\n        mode,\r\n        ...(mode === 'light'\r\n            ? {\r\n                // palette values for light mode\r\n                primary: red,\r\n                text: {\r\n                    secondary: grey[600],\r\n                },\r\n                background: {\r\n                    paper: '#f5f5f5'\r\n                }\r\n\r\n            }\r\n            : {\r\n                // palette values for dark mode\r\n                primary: deepOrange,\r\n                text: {\r\n                    secondary: '#fff',\r\n                },\r\n\r\n            }),\r\n\r\n    },\r\n});\r\n\r\n\r\nexport interface CartActions {\r\n    cartChanges: 'create' | 'addQuantity' | 'remove' | 'reduceQuantity';\r\n}\r\n\r\nexport const changeCartContaining = (isElementQuantitySingle: boolean, isDeleting: boolean, cartIndex: number): CartActions['cartChanges'] => {\r\n    let result: CartActions['cartChanges']\r\n    if (!isDeleting) {\r\n        (cartIndex === -1) ?\r\n            result = 'create'\r\n            :\r\n            result = 'addQuantity'\r\n    } else {\r\n        (isElementQuantitySingle) ?\r\n            result = 'remove'\r\n            :\r\n            result = 'reduceQuantity'\r\n    }\r\n    return result\r\n}\r\n\r\nexport function request(url: string, method: string, body?: object, token?: string) {\r\n    return (fetch(`http://localhost:1111/${url}`, {\r\n        method: method,\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(body),\r\n    }).then(response => response.json())\r\n    );\r\n}\r\n\r\nexport const filter = [\r\n    {\r\n        name: 'Brand',\r\n        contain: ['Ikea', 'Star', 'Mriya']\r\n    },\r\n    {\r\n        name: 'Size',\r\n        contain: ['small', 'medium', 'big'],\r\n    },\r\n    {\r\n        name: 'Material',\r\n        contain: ['wood', 'metal', 'plastic', 'leather', 'glass']\r\n    },\r\n    {\r\n        name: 'Price',\r\n        contain: []\r\n    }\r\n]\r\n\r\nexport const materialCheck = (filter: string[], dataMaterial: string[]): boolean => {\r\n    if (filter.length === 0) return true\r\n    let result = false\r\n    filter.forEach((el) => {\r\n\r\n        if (dataMaterial.includes(el)) result = true\r\n\r\n    })\r\n    return result\r\n}\r\n\r\ninterface UsePaginationProps {\r\n    contentPerPage: number,\r\n    count: number,\r\n}\r\ninterface UsePaginationReturn {\r\n    page: number;\r\n    totalPages: number;\r\n    firstContentIndex: number;\r\n    lastContentIndex: number;\r\n    nextPage: () => void;\r\n    prevPage: () => void;\r\n    setPage: (page: number) => void;\r\n}\r\nexport type UsePagination = (arg0: UsePaginationProps) => (UsePaginationReturn);","import React, { FunctionComponent } from \"react\";\r\nimport { CatalogueEntry } from \"../types\";\r\nimport './components.css'\r\nimport { Button, CardContent, Card, CardActions, Tooltip, IconButton, Box, Typography, createTheme, PaletteMode } from \"@mui/material\";\r\nimport AddShoppingCartIcon from '@mui/icons-material/AddShoppingCart';\r\nimport { useAppSelector } from \"../redux/hooks\";\r\nimport { getDesignTokens } from \"../service.helper\";\r\n\r\ntype CatalogueItemProps = {\r\n    id: CatalogueEntry['id'],\r\n    title: CatalogueEntry['title'],\r\n    description: CatalogueEntry['description'],\r\n    price: CatalogueEntry['price']\r\n    image: CatalogueEntry['image']\r\n    material: CatalogueEntry['material']\r\n    brand: CatalogueEntry['brand']\r\n    changeTotalValue: (id: string, isDeleting: boolean) => void\r\n    goProduct: (id: string) => void\r\n    itemTotalPrice: (id: string) => void\r\n}\r\n\r\nexport const CatalogueItem: FunctionComponent<CatalogueItemProps> = ({ title, description, brand, price, material, changeTotalValue, id, image, goProduct, itemTotalPrice }) => {\r\n    const reducerTheme = useAppSelector<PaletteMode>(state => state.persistedReducer.themeSlice.mode)\r\n    const quantity = useAppSelector(\r\n        state => {\r\n            const element = state.persistedReducer.cartSlice.find(el => el.id === id)\r\n            if (element) return element.quantity\r\n            else return 0\r\n        })\r\n    let theme = createTheme((getDesignTokens(reducerTheme)))\r\n\r\n    return (\r\n        <Card raised variant=\"elevation\" sx={{ width: '250px', height: '500px' }}  >\r\n            <CardActions onClick={() => { goProduct(id) }} sx={{ justifyContent: 'center' }}>\r\n                <Button>\r\n                    <img id='base64image' width={200} height={200} src={image} />\r\n                </Button>\r\n            </CardActions>\r\n            <CardContent >\r\n                <Typography style={{ fontWeight: 'bold', whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: 'hidden' }}>\r\n                    {title}\r\n                </Typography>\r\n                <Typography style={{ fontWeight: 'bold', fontSize: 13, whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: 'hidden', marginBottom: 4 }}>\r\n                    by {brand}\r\n                </Typography>\r\n                <Tooltip title={description}>\r\n                    <Typography sx={{ color: theme.palette.text.secondary }} style={{ fontSize: 11, overflow: 'hidden', WebkitLineClamp: 3, WebkitBoxOrient: 'vertical', display: '-webkit-inline-box' }}>\r\n                        {description}\r\n                    </Typography>\r\n                </Tooltip>\r\n                <Typography sx={{ color: theme.palette.text.secondary }} style={{ fontSize: 14, overflow: 'hidden', WebkitLineClamp: 1, WebkitBoxOrient: 'vertical', display: '-webkit-inline-box' }}>\r\n                    Material: {material.join(', ')}\r\n                </Typography>\r\n                <Typography sx={{ fontWeight: 'bold', color: theme.palette.primary.main }}>\r\n                    {price}$\r\n                </Typography>\r\n            </CardContent >\r\n            <CardContent>\r\n                <CardActions sx={{ justifyContent: 'center' }} >\r\n                    {\r\n                        (quantity > 0) ? (\r\n                            <Box sx={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\r\n                                <Button variant='contained' size='small' sx={{ p: 0, m: 2 }} onClick={\r\n                                    () => {\r\n                                        changeTotalValue(id, false)\r\n                                    }\r\n                                }>+</Button>\r\n                                <Box sx={{ display: 'flex', flexDirection: 'column', justifyContent: \"center\", alignItems: 'center', fontSize: 12 }}>\r\n                                    <span>{quantity}</span>\r\n                                    <span>{itemTotalPrice(id)}$</span>\r\n                                </Box >\r\n                                <Button variant='contained' size='small' sx={{ p: 0, m: 2 }} onClick={\r\n                                    () => {\r\n                                        changeTotalValue(id, true)\r\n                                    }\r\n                                }>-</Button>\r\n                            </Box>\r\n                        )\r\n                            :\r\n                            <Tooltip title=\"Add to cart\" placement=\"top\">\r\n                                <IconButton\r\n                                    sx={{ color: theme.palette.primary.main }}\r\n                                    onClick={\r\n                                        () => {\r\n                                            changeTotalValue(id, false)\r\n                                        }}\r\n                                    aria-label=\"add to shopping cart\">\r\n                                    <AddShoppingCartIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                    }\r\n                </CardActions>\r\n            </CardContent>\r\n        </Card >\r\n    )\r\n}","import { CartEntry } from '../types';\r\nimport { createSlice } from '@reduxjs/toolkit'\r\nconst initialState: CartEntry[] = []\r\n\r\nconst cartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState,\r\n  reducers: {\r\n    addItemToCart(state: CartEntry[], action: { payload: CartEntry }) {\r\n      state.push({\r\n        id: action.payload.id,\r\n        quantity: action.payload.quantity,\r\n      })\r\n    },\r\n    addQuantity(state: CartEntry[], action: { payload: { index: number } }) {\r\n      state[action.payload.index].quantity += 1\r\n    },\r\n    deleteItemFromCart(state: CartEntry[], action: { payload: { index: number } }) {\r\n      state.splice(action.payload.index, 1\r\n      )\r\n    },\r\n    reduceQuantity(state: CartEntry[], action: { payload: { index: number } }) {\r\n      state[action.payload.index].quantity -= 1\r\n    },\r\n    deleteItem(state: CartEntry[]) {\r\n      state.shift()\r\n    },\r\n    clearCartSlice(state: CartEntry[]) {\r\n      state.length = 0\r\n    }\r\n  }\r\n})\r\n\r\nexport const { addItemToCart, deleteItemFromCart, addQuantity, reduceQuantity, deleteItem, clearCartSlice } = cartSlice.actions\r\nexport default cartSlice.reducer\r\n\r\n","import { createSlice } from \"@reduxjs/toolkit\"\r\nimport { CatalogueEntry, DataFilters } from \"../types\"\r\n\r\ninterface DataState {\r\n    data: CatalogueEntry[],\r\n    filter: DataFilters,\r\n    price: number[],\r\n    search: string,\r\n    sort: string\r\n}\r\n\r\nconst initialFilters: DataFilters = {\r\n    Brand: [],\r\n    Size: [],\r\n    Material: [],\r\n}\r\n\r\nconst initialState: DataState = { data: [], filter: initialFilters, price: [], search: '', sort: '' }\r\nconst dataSlice = createSlice({\r\n    name: 'data',\r\n    initialState,\r\n    reducers: {\r\n        addData(state: DataState, action: { payload: CatalogueEntry[] }) {\r\n            state.data = [...action.payload]\r\n            const max = Math.max(...action.payload.map(el => el.price))\r\n            const min = Math.min(...action.payload.map(el => el.price))\r\n            state.price = [min, max]\r\n        },\r\n        addFilter(state: DataState, action: { payload: { containName: string, propertyName: string } }) {\r\n            if (!state.filter[action.payload.propertyName as keyof DataFilters].includes(action.payload.containName)) {\r\n                state.filter[action.payload.propertyName as keyof DataFilters].push(action.payload.containName)\r\n            }\r\n            else {\r\n                state.filter[action.payload.propertyName as keyof DataFilters].splice(state.filter[action.payload.propertyName as keyof DataFilters].indexOf(action.payload.containName), 1)\r\n            }\r\n        },\r\n        addPrice(state: DataState, action: { payload: number[] }) {\r\n            state.price = [...action.payload]\r\n        },\r\n        filterShift(state: DataState) {\r\n            state.filter = initialFilters\r\n            state.price = [Math.min(...state.data.map(el => el.price)), Math.max(...state.data.map(el => el.price))]\r\n\r\n        },\r\n        searchTitleReducer(state: DataState, action: { payload: string }) {\r\n            state.search = action.payload\r\n        },\r\n        clearDataSlice(state: DataState) {\r\n            state.filter = initialFilters,\r\n                state.sort = '',\r\n                state.price = [Math.min(...state.data.map(el => el.price)), Math.max(...state.data.map(el => el.price))],\r\n                state.search = '',\r\n                state.data.length = 0\r\n        }\r\n    }\r\n})\r\n\r\nexport const { addData, addFilter, addPrice, filterShift, searchTitleReducer, clearDataSlice } = dataSlice.actions\r\nexport default dataSlice.reducer\r\n","import React, { FunctionComponent, useState } from \"react\";\r\nimport { DataFilters } from \"../types\";\r\nimport './components.css'\r\nimport { Button, Card, Grid, Box, Checkbox, FormControlLabel, List, ListItem, ListItemText, Slider, Accordion, AccordionSummary, AccordionDetails } from \"@mui/material\";\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { useAppDispatch, useAppSelector } from \"../redux/hooks\";\r\nimport { addFilter, addPrice, filterShift } from \"../redux/dataReducer\";\r\nimport { filter } from \"../service.helper\";\r\n\r\n\r\ntype FilterComponentProps = {}\r\n\r\nexport const FilterComponent: FunctionComponent<FilterComponentProps> = () => {\r\n\r\n    const dispatcher = useAppDispatch()\r\n    const data = useAppSelector(state => state.persistedReducer.dataSlice.data)\r\n    const filteredData = useAppSelector(state => state.persistedReducer.dataSlice.filter)\r\n    const price = useAppSelector(state => state.persistedReducer.dataSlice.price)\r\n\r\n    const handleChangeCheckbox = (containName: string, propertyName: string) => {\r\n        dispatcher(addFilter({ containName, propertyName }))\r\n    };\r\n    const dataPrice = data.map(el => el.price)\r\n    const max = Math.max(...dataPrice)\r\n    const min = Math.min(...dataPrice)\r\n    const [slider, setSlider] = useState<number[]>(price)\r\n    const handleChangeSlider = (event: Event, newPrice: number | number[]) => {\r\n        setSlider(newPrice as number[]);\r\n    };\r\n    const applyPrice = () => {\r\n        dispatcher(addPrice(slider))\r\n    }\r\n\r\n    return (\r\n        <Box >\r\n            {filter.map((filterItem) => (\r\n                (filterItem.name === 'Brand' || filterItem.name === 'Size' || filterItem.name === 'Material') ? (\r\n                    <Card raised sx={{\r\n                        display: 'inherit', justifyContent: 'left', margin: 3, padding: 3\r\n                    }}\r\n                        key={filterItem.name}>\r\n                        <Accordion sx={{ display: \"contents\" }} >\r\n                            <AccordionSummary\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                aria-controls=\"panel2a-content\"\r\n                                id=\"panel2a-header\">\r\n                                <List>\r\n                                    <ListItem disablePadding>\r\n                                        <ListItemText primary={filterItem.name} />\r\n                                    </ListItem>\r\n                                </List>\r\n                            </AccordionSummary>\r\n                            {\r\n                                filterItem.contain.map((checkboxName) =>\r\n                                    < AccordionDetails key={checkboxName}>\r\n                                        <FormControlLabel\r\n                                            label={checkboxName}\r\n                                            control={<Checkbox\r\n                                                checked={filteredData[filterItem.name as keyof DataFilters].includes(checkboxName)}\r\n                                                onChange={() => handleChangeCheckbox(checkboxName, filterItem.name)} />}\r\n                                        />\r\n                                    </AccordionDetails>\r\n                                )\r\n                            }\r\n                        </Accordion>\r\n                    </Card>) : null\r\n            ))}\r\n            <Card raised sx={{ display: 'inherit', margin: 3, padding: 3 }}>\r\n                <Accordion sx={{ display: \"contents\" }}>\r\n                    <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel2a-content\"\r\n                        id=\"panel2a-header\">\r\n                        <List>\r\n                            <ListItem disablePadding>\r\n                                <ListItemText>\r\n                                    Price\r\n                                </ListItemText>\r\n                            </ListItem>\r\n                        </List>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <Slider\r\n                            disableSwap\r\n                            getAriaLabel={() => 'Price'}\r\n                            valueLabelDisplay=\"on\"\r\n                            min={min}\r\n                            max={max}\r\n                            onChange={handleChangeSlider}\r\n                            value={slider}\r\n                        />\r\n                        <Button variant=\"contained\" color='primary' size='medium'\r\n                            onClick={applyPrice}\r\n                            sx={{ width: '30px', justifySelf: 'right' }}>Apply</Button>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n            </Card>\r\n            <Grid sx={{ mt: 2, ml: 3 }}>\r\n                <Button variant=\"contained\" size='medium'\r\n                    onClick={() => {\r\n                        dispatcher(filterShift())\r\n                        setSlider([min, max])\r\n                    }}>\r\n                    Clear filter\r\n                </Button>\r\n            </Grid>\r\n        </Box>)\r\n}","import { createSlice } from \"@reduxjs/toolkit\"\r\n\r\ninterface TokenState {\r\n    id: string,\r\n    name: string,\r\n    currentToken: string,\r\n    isAuth: boolean\r\n}\r\n\r\nconst initialState: TokenState = {\r\n    id: '',\r\n    name: '',\r\n    currentToken: '',\r\n    isAuth: false\r\n}\r\n\r\nconst tokenSlice = createSlice({\r\n    name: 'token',\r\n    initialState,\r\n    reducers: {\r\n        addToken(state: TokenState, action: { payload: TokenState }) {\r\n            state.id = action.payload.id\r\n            state.name = action.payload.name\r\n            state.currentToken = action.payload.currentToken\r\n            state.isAuth = action.payload.isAuth\r\n        },\r\n        deleteToken(state: TokenState) {\r\n            state.id = ''\r\n            state.name = ''\r\n            state.currentToken = ''\r\n            state.isAuth = false\r\n        },\r\n    }\r\n})\r\n\r\nexport const { addToken, deleteToken } = tokenSlice.actions\r\nexport default tokenSlice.reducer","import { createSlice } from '@reduxjs/toolkit'\r\n\r\ninterface PageState {\r\n    page: number\r\n    items: number\r\n}\r\n\r\nconst initialState: PageState = { page: 1, items: 4 }\r\nconst pageSlice = createSlice({\r\n    name: 'page',\r\n    initialState,\r\n    reducers: {\r\n        currentPage(state: PageState, action: { payload: number }) {\r\n            state.page = action.payload\r\n        },\r\n        itemsPerPage(state: PageState, action: { payload: number }) {\r\n            state.items = action.payload\r\n        }\r\n    }\r\n\r\n})\r\n\r\nexport const { currentPage, itemsPerPage } = pageSlice.actions\r\nexport default pageSlice.reducer","import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAppDispatch, useAppSelector } from \"../redux/hooks\";\r\nimport { currentPage } from \"../redux/pageReducer\";\r\nimport { UsePagination } from \"../service.helper\";\r\n\r\nconst usePagination: UsePagination = ({ contentPerPage, count }) => {\r\n    const [page, setPage] = useState(1);\r\n    const dispatcher = useAppDispatch()\r\n    const pageInReducer = useAppSelector(state => state.persistedReducer.pageSlice.page)\r\n    const navigate = useNavigate()\r\n    const pageCount = Math.ceil(count / contentPerPage);\r\n    const lastContentIndex = pageInReducer * contentPerPage;\r\n    const firstContentIndex = lastContentIndex - contentPerPage;\r\n\r\n    const changePage = (direction: boolean) => {\r\n        const newPage = () => {\r\n            if (direction) {\r\n                if (pageInReducer === pageCount) {\r\n                    return pageInReducer;\r\n                }\r\n                return pageInReducer + 1;\r\n            } else {\r\n                if (pageInReducer === 1) {\r\n                    return pageInReducer;\r\n                }\r\n                return pageInReducer - 1;\r\n            }\r\n        };\r\n        dispatcher(currentPage(newPage()))\r\n        navigate(`/catalogue/page=${newPage()}`)\r\n\r\n    };\r\n\r\n    const setPageSAFE = (num: number) => {\r\n        if (num > pageCount) {\r\n            setPage(pageCount);\r\n        } else if (num < 1) {\r\n            setPage(1);\r\n        } else {\r\n            setPage(num);\r\n        }\r\n        dispatcher(currentPage(num))\r\n        navigate(`/catalogue/page=${num}`)\r\n    };\r\n\r\n    return {\r\n        totalPages: pageCount,\r\n        nextPage: () =>\r\n            changePage(true),\r\n        prevPage: () =>\r\n            changePage(false)\r\n        ,\r\n        setPage: setPageSAFE,\r\n        firstContentIndex,\r\n        lastContentIndex,\r\n        page,\r\n    };\r\n};\r\n\r\nexport default usePagination","import { IconButton, Typography } from \"@mui/material\";\r\nimport React, { FunctionComponent } from \"react\";\r\nimport { AppRoutes } from \"../routerTypes\";\r\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAppSelector } from \"../redux/hooks\";\r\n\r\ntype OrderButton = {}\r\n\r\nexport const OrderButton: FunctionComponent<OrderButton> = () => {\r\n    const navigate = useNavigate()\r\n    const cart = useAppSelector(state => state.persistedReducer.cartSlice)\r\n    const data = useAppSelector(state => state.persistedReducer.dataSlice.data)\r\n    const goOrder = () => {\r\n        navigate(AppRoutes.ORDER)\r\n    }\r\n\r\n    const totalPrice = () => {\r\n        let sum = 0;\r\n        cart.forEach(cartEntry => {\r\n            let dataElement = data.find(el => el.id === cartEntry.id)\r\n            if (dataElement && cartEntry.quantity) {\r\n                sum += dataElement.price * cartEntry.quantity\r\n            }\r\n        })\r\n        if (sum === 0) { return 'Empty' }\r\n        return sum + ' $';\r\n    }\r\n\r\n    return (\r\n        <IconButton aria-label='cart' onClick={goOrder} >\r\n            <ShoppingCartIcon color='action' fontSize='large' sx={{ mr: 2 }} />\r\n            <Typography\r\n                variant=\"h6\"\r\n                noWrap\r\n                component=\"div\"\r\n                sx={{ display: 'flex', width: '70px' }}\r\n            >\r\n                {totalPrice()}\r\n            </Typography>\r\n        </IconButton>\r\n    )\r\n}","import React, { FC, useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Box, Button, CircularProgress, FormControl, Grid, InputLabel, MenuItem, Select, SelectChangeEvent, Typography } from '@mui/material';\r\nimport { CatalogueItem } from \"../components/CatalogueItem\";\r\nimport \"./pages.css\"\r\nimport { changeCartContaining, CartActions, materialCheck } from \"../service.helper\";\r\nimport { CatalogueEntry } from \"../types\";\r\nimport { useAppDispatch, useAppSelector } from \"../redux/hooks\";\r\nimport { addItemToCart, deleteItemFromCart, addQuantity, reduceQuantity } from \"../redux/cartReducer\";\r\nimport { addData } from '../redux/dataReducer'\r\nimport { FilterComponent } from \"../components/FilterField\";\r\nimport { addToken } from \"../redux/tokenReducer\";\r\nimport axios from \"axios\";\r\nimport usePagination from \"../components/PaginationHook\";\r\nimport { currentPage, itemsPerPage } from \"../redux/pageReducer\";\r\nimport MoodBadSharpIcon from '@mui/icons-material/MoodBadSharp';\r\nimport { OrderButton } from \"../components/OrderButton\";\r\n\r\ntype Props = {}\r\nexport const Catalogue: FC<Props> = () => {\r\n\r\n    const navigate = useNavigate()\r\n    const dispatcher = useAppDispatch()\r\n    const cart = useAppSelector(state => state.persistedReducer.cartSlice)\r\n    const { data, search } = useAppSelector(state => state.persistedReducer.dataSlice)\r\n    const tokenUser = useAppSelector(state => state.persistedReducer.tokenSlice.currentToken)\r\n    const filteredData = useAppSelector(state => state.persistedReducer.dataSlice.filter)\r\n    const tokenState = useAppSelector(state => state.persistedReducer.tokenSlice)\r\n    const { page, items } = useAppSelector(state => state.persistedReducer.pageSlice)\r\n    const [sort, setSort] = useState('');\r\n\r\n    const handleChange = (event: SelectChangeEvent) => {\r\n        setSort(event.target.value as string);\r\n    };\r\n\r\n    const serverData = useAppSelector(state => {\r\n        const { filter, data, price } = state.persistedReducer.dataSlice\r\n        if (filter.Size.length === 0 && filter.Material.length === 0 && filter.Brand.length === 0 && price[0] === Math.min(...data.map(price => price.price))\r\n            && price[1] === Math.max(...data.map(price => price.price)) && !search && sort === '')\r\n            return data\r\n        else\r\n            return data\r\n                .filter(el => {\r\n                    if (\r\n                        (filter.Brand.includes(el.brand) || filter.Brand.length === 0)\r\n                        && (filter.Size.includes(el.size) || filter.Size.length === 0)\r\n                        && el.price >= price[0]\r\n                        && el.price <= price[1]\r\n                        && materialCheck(filter.Material, el.material)\r\n                        && (el.title.toLocaleLowerCase().includes(search.toLocaleLowerCase())\r\n                            || el.brand.toLocaleLowerCase().includes(search.toLocaleLowerCase())\r\n                            || el.material.toString().toLocaleLowerCase().includes(search.toLocaleLowerCase())\r\n                            || el.size.toLocaleLowerCase().includes(search.toLocaleLowerCase()))\r\n                    ) return el\r\n                })\r\n                .sort((a, b) => {\r\n                    if (sort === 'fromCheap')\r\n                        return a.price - b.price\r\n                    else if (sort === 'fromExp')\r\n                        return b.price - a.price\r\n                    else if (a.title > b.title && sort === 'fromZtoA')\r\n                        return -1\r\n                    else if (b.title > a.title && sort === 'fromAtoZ')\r\n                        return -1\r\n                    else return 0\r\n                })\r\n    })\r\n\r\n    const {\r\n        firstContentIndex,\r\n        lastContentIndex,\r\n        nextPage,\r\n        prevPage,\r\n        setPage,\r\n        totalPages,\r\n    } = usePagination({\r\n        contentPerPage: items,\r\n        count: serverData.length,\r\n    });\r\n\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const getData = async () => {\r\n        setIsLoading(true)\r\n        axios.get('http://localhost:1111/data', {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${tokenUser}`\r\n            }\r\n        }).then((response: any) => {\r\n            const data = response.data['data'] as CatalogueEntry[]\r\n            data.forEach((el, index) => {\r\n                data[index].image = 'data:image/jpeg;base64,' + data[index].image\r\n            })\r\n            dispatcher(addData(data))\r\n            const bearer = response.data.newToken.split(' ')\r\n            const currentToken = bearer[1]\r\n            dispatcher(addToken({ ...tokenState, currentToken }))\r\n        })\r\n        setIsLoading(false)\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            getData()\r\n        }, [filteredData]\r\n    )\r\n\r\n    const goProduct = (id: string) => {\r\n        serverData.map((el: { id: string; }) => {\r\n            if (el.id === id)\r\n                navigate(`/product/${el.id}`)\r\n        })\r\n    }\r\n\r\n    const changeTotalValue = (id: string, isDeleting: boolean) => {\r\n        const index = cart.findIndex(el => el.id === id)\r\n        let isElementQuantitySingle\r\n        if (index >= 0) {\r\n            isElementQuantitySingle = cart[index].quantity === 1\r\n        } else {\r\n            isElementQuantitySingle = false\r\n        }\r\n        let cartAction: CartActions['cartChanges'] = changeCartContaining(isElementQuantitySingle, isDeleting, index)\r\n\r\n        switch (cartAction) {\r\n            case 'create':\r\n                dispatcher(addItemToCart({ id, quantity: 1 }))\r\n                break;\r\n            case 'addQuantity':\r\n                dispatcher(addQuantity({ index }))\r\n                break;\r\n            case 'remove':\r\n                dispatcher(deleteItemFromCart({ index }))\r\n                break;\r\n            case 'reduceQuantity':\r\n                dispatcher(reduceQuantity({ index }))\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const itemTotalPrice = (id: string): number => {\r\n        let currentCatalogueEntry = data.find(el => el.id === id)\r\n        let currentCartEntry = cart.find(el => el.id === id)\r\n        if (currentCatalogueEntry && currentCartEntry) return currentCatalogueEntry.price * currentCartEntry.quantity\r\n        else return 0\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                (isLoading) ?\r\n                    <CircularProgress color=\"success\" sx={{ pl: 10, pt: 10 }} />\r\n                    :\r\n                    <Grid container wrap={'nowrap'} columns={2} sx={{ pt: 12 }}>\r\n                        <Box sx={{ minWidth: { md: '300px' } }}>\r\n                            <FormControl sx={{ width: '-webkit-fill-available', mx: 3 }} >\r\n                                <InputLabel>Sort</InputLabel>\r\n                                <Select\r\n                                    // MenuProps={{ disableScrollLock: true }}\r\n                                    value={sort}\r\n                                    label=\"Sort\"\r\n                                    onChange={handleChange}\r\n                                >\r\n                                    <MenuItem value={''}>None</MenuItem>\r\n                                    <MenuItem value={'fromCheap'}>First lowest price</MenuItem>\r\n                                    <MenuItem value={'fromExp'}>First highest price</MenuItem>\r\n                                    <MenuItem value={'fromAtoZ'}>From A to Z</MenuItem>\r\n                                    <MenuItem value={'fromZtoA'}>From Z to A</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                            <FilterComponent />\r\n                            <Box sx={{ display: { md: 'none' }, mx: 3, mt: 2 }}>\r\n                                <OrderButton />\r\n                            </Box >\r\n                        </Box>\r\n                        <Box>\r\n                            {(serverData.length === 0) ? (\r\n                                <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', pt: '20%', pl: '100px' }}>\r\n                                    <MoodBadSharpIcon sx={{ width: '4em', height: '4em' }} />\r\n                                    <Typography sx={{ fontSize: 24 }} >There is no such items</Typography>\r\n                                </Box>\r\n                            ) : (\r\n                                <><Grid container spacing={6} sx={{ display: 'box' }}>\r\n                                    {serverData\r\n                                        .slice(firstContentIndex, lastContentIndex)\r\n                                        .map((el, index) => {\r\n                                            return <Grid item key={serverData[index].id}>\r\n                                                <CatalogueItem\r\n                                                    changeTotalValue={changeTotalValue}\r\n                                                    {...el}\r\n                                                    goProduct={goProduct}\r\n                                                    itemTotalPrice={itemTotalPrice} />\r\n                                            </Grid>;\r\n                                        })}\r\n                                </Grid>\r\n                                    <Grid sx={{ display: 'flex', flexWrap: 'nowrap', mt: 3, mb: 6, height: '36px', width: '580px' }}>\r\n                                        <Box sx={{ display: 'flex', width: 'auto' }}>\r\n                                            {(page !== 1) ? <Button onClick={prevPage}>\r\n                                                &larr;\r\n                                            </Button> : <Button disabled>\r\n                                                &larr;\r\n                                            </Button>}\r\n                                            {/* @ts-ignore */}\r\n                                            {[...Array(totalPages).keys()].map((el) => (\r\n                                                <Button\r\n                                                    onClick={() => setPage(el + 1)}\r\n                                                    key={el}\r\n                                                    variant={(el + 1 === page ? 'contained' : 'text')}\r\n                                                >\r\n                                                    {el + 1}\r\n                                                </Button>\r\n                                            ))}\r\n                                            {(page !== totalPages) ?\r\n                                                <Button onClick={nextPage}>\r\n                                                    &rarr;\r\n                                                </Button> :\r\n                                                <Button disabled>\r\n                                                    &rarr;\r\n                                                </Button>}\r\n                                        </Box>\r\n                                        <Box sx={{ display: 'flex' }}>\r\n                                            <Typography alignSelf='center' whiteSpace='pre' marginRight={1}>Items per page</Typography>\r\n                                            <Button onClick={() => {\r\n                                                dispatcher(itemsPerPage(12));\r\n                                                dispatcher(currentPage(1));\r\n                                                navigate('/');\r\n                                            }} variant={items === 12 ? 'contained' : 'text'}>12</Button>\r\n                                            <Button onClick={() => dispatcher(itemsPerPage(4))} variant={items === 4 ? 'contained' : 'text'} sx={{ mr: { xs: 2 } }}>4</Button>\r\n                                        </Box>\r\n                                    </Grid></>\r\n                            )}\r\n                        </Box>\r\n                    </Grid>\r\n            }\r\n        </div >\r\n    )\r\n}","import { FunctionComponent, useState } from \"react\";\r\nimport './components.css'\r\nimport { Button, Tooltip, ListItem, List, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Card, Typography, Box } from \"@mui/material\";\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport React from \"react\";\r\nimport { CatalogueEntry } from \"../types\";\r\nimport { useAppDispatch, useAppSelector } from \"../redux/hooks\";\r\nimport { deleteItem } from '../redux/cartReducer'\r\n\r\ntype OrderItemProps = {\r\n    id: CatalogueEntry['id']\r\n    title: CatalogueEntry['title'],\r\n    description: CatalogueEntry['description'],\r\n    price: CatalogueEntry['price']\r\n    image?: CatalogueEntry['image']\r\n    changeTotalValue: (id: string, isDeleting: boolean) => void\r\n    itemTotalPrice: (id: string) => void\r\n    goProduct: (id: string) => void\r\n}\r\n\r\nexport const OrderItem: FunctionComponent<OrderItemProps> = ({ title, changeTotalValue, id, image, itemTotalPrice, goProduct }) => {\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const dispatcher = useAppDispatch()\r\n    const quantity = useAppSelector(\r\n        state => {\r\n            const element = state.persistedReducer.cartSlice.find(el => el.id === id)\r\n            if (element) return element.quantity\r\n            else return 0\r\n        })\r\n\r\n    return (\r\n        <Card>\r\n            <List sx={{ width: 700, margin: 'auto', padding: 0, flexDirection: 'row', display: 'flex' }}>\r\n                <ListItem sx={{ width: 'auto', justifyContent: 'center' }}>\r\n                    <Button onClick={() => { goProduct(id) }}>\r\n                        <img id='base64image' width={80} height={80} src={image} />\r\n                    </Button>\r\n                </ListItem>\r\n                <ListItem sx={{ width: 200, justifyContent: 'center' }}>\r\n                    < Tooltip title={title} placement=\"top\">\r\n                        <Typography sx={{ fontWeight: 'bold' }}>\r\n                            {title}\r\n                        </Typography>\r\n                    </Tooltip >\r\n                </ListItem>\r\n                <ListItem sx={{ width: 200, justifyContent: 'center' }}>\r\n                    {\r\n                        (quantity > 0) ? (\r\n                            <Box sx={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\r\n                                <Button variant='text' onClick={\r\n                                    () => {\r\n                                        changeTotalValue(id, false)\r\n                                    }\r\n                                }>+</Button>\r\n                                <Box sx={{ display: 'flex', flexDirection: 'column', justifyContent: \"center\", alignItems: 'center' }}>\r\n                                    <span>{quantity}</span>\r\n                                    <span>{itemTotalPrice(id)}$</span>\r\n                                </Box >\r\n                                <Button variant='text' onClick={\r\n                                    () => {\r\n                                        changeTotalValue(id, true)\r\n                                    }\r\n                                }>-</Button>\r\n                            </Box>\r\n                        )\r\n                            :\r\n                            <Button variant='contained'\r\n                                onClick={\r\n                                    () => {\r\n\r\n                                        changeTotalValue(id, false)\r\n                                    }\r\n                                } >Add to cart\r\n                            </Button>\r\n                    }\r\n                </ListItem>\r\n                <ListItem sx={{ width: 200, justifyContent: 'center' }}>\r\n                    <Tooltip title='Delete' placement=\"top\">\r\n                        <IconButton onClick={() => setOpen(true)}>\r\n                            <DeleteIcon />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </ListItem>\r\n            </List>\r\n            <Dialog\r\n                open={open}\r\n                onClose={() => { setOpen(false) }}\r\n                aria-describedby=\"alert-dialog-slide-description\">\r\n                <DialogTitle>Delete</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        Are you sure you want to remove this item from the cart?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={() => dispatcher(deleteItem())}>Yes</Button>\r\n                    <Button onClick={() => setOpen(false)}>Cancel</Button>\r\n\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Card>\r\n    )\r\n}","import { FC } from \"react\";\r\nimport { Typography, List, ListItem } from '@mui/material';\r\nimport \"./pages.css\"\r\nimport Divider from '@mui/material/Divider';\r\nimport { OrderItem } from \"../components/OrderItem\";\r\nimport React from \"react\";\r\nimport { changeCartContaining, CartActions } from \"../service.helper\";\r\nimport { useAppDispatch, useAppSelector } from \"../redux/hooks\";\r\nimport { addItemToCart, deleteItemFromCart, addQuantity, reduceQuantity } from \"../redux/cartReducer\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\ntype OrderItemProps = {}\r\n\r\nexport const Order: FC<OrderItemProps> = () => {\r\n    const navigate = useNavigate()\r\n    const dispatcher = useAppDispatch()\r\n    const serverData = useAppSelector(state => state.persistedReducer.dataSlice.data)\r\n    const cart = useAppSelector(state => state.persistedReducer.cartSlice)\r\n\r\n    const quantity = (id: string) => {\r\n        let orderQuantity = useAppSelector(\r\n            state => {\r\n                const element = state.persistedReducer.cartSlice.find(el => el.id === id)\r\n                if (element) return element.quantity\r\n                else return 0\r\n            })\r\n        return orderQuantity\r\n    }\r\n\r\n    const changeTotalValue = (id: string, isDeleting: boolean) => {\r\n        const index = cart.findIndex(el => el.id === id)\r\n        let isElementQuantitySingle\r\n        if (index >= 0) {\r\n            isElementQuantitySingle = cart[index].quantity === 1\r\n        } else {\r\n            isElementQuantitySingle = false\r\n        }\r\n        let cartAction: CartActions['cartChanges'] = changeCartContaining(isElementQuantitySingle, isDeleting, index)\r\n        switch (cartAction) {\r\n            case 'create':\r\n                dispatcher(addItemToCart({ id, quantity: 1 }))\r\n                break;\r\n            case 'addQuantity':\r\n                dispatcher(addQuantity({ index }))\r\n                break;\r\n            case 'remove':\r\n                dispatcher(deleteItemFromCart({ index }))\r\n\r\n                break;\r\n            case 'reduceQuantity':\r\n                dispatcher(reduceQuantity({ index }))\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    const itemTotalPrice = (id: string): number => {\r\n        let currentCatalogueEntry = serverData.find(el => el.id === id)\r\n        let currentCartEntry = cart.find(el => el.id === id)\r\n\r\n        if (currentCatalogueEntry && currentCartEntry) return currentCatalogueEntry.price * currentCartEntry.quantity\r\n        else return 0\r\n    }\r\n\r\n    const totalPrice = () => {\r\n        let sum = 0;\r\n        cart.forEach(cartEntry => {\r\n            let dataElement = serverData.find(el => el.id === cartEntry.id)\r\n            if (dataElement && cartEntry.quantity) {\r\n                sum += dataElement.price * cartEntry.quantity\r\n            }\r\n        })\r\n        return sum;\r\n    }\r\n\r\n    const goProduct = (id: string) => {\r\n        serverData.map((el: { id: string; }) => {\r\n            if (el.id === id)\r\n                navigate(`/product/${el.id}`)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Typography sx={{ mt: 12, mb: 4, textAlign: 'center' }} variant=\"h3\" component=\"div\">\r\n                Your cart:\r\n            </Typography>\r\n            <List sx={{ width: 700, margin: 'auto' }}>\r\n                {serverData.map((el, index) => {\r\n                    if (quantity(el.id))\r\n                        return <React.Fragment key={`order-item-${serverData[index].id}`}>\r\n                            <ListItem>\r\n                                <OrderItem\r\n                                    key={serverData[index].id}\r\n                                    changeTotalValue={changeTotalValue}\r\n                                    {...el}\r\n                                    itemTotalPrice={itemTotalPrice}\r\n                                    goProduct={goProduct} />\r\n                            </ListItem>\r\n                            <Divider />\r\n                        </React.Fragment>;\r\n                    else\r\n                        return null;\r\n                }\r\n                )}\r\n            </List>\r\n            <Typography sx={{ fontSize: 24, textAlign: 'center', fontWeight: 'bold', my: 4 }}>Total: {totalPrice()} $</Typography>\r\n        </div>\r\n    )\r\n}","import React, { FC, useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Alert, Box, Button, Card, Divider, IconButton, InputAdornment, Snackbar, TextField, Typography, useTheme } from '@mui/material';\r\nimport { AppRoutes } from \"../routerTypes\";\r\nimport \"./pages.css\"\r\nimport { LogInFields } from \"../types\";\r\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\r\nimport { useAppDispatch } from \"../redux/hooks\";\r\nimport { addToken } from \"../redux/tokenReducer\";\r\nimport JWT from 'jsonwebtoken'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { gapi } from 'gapi-script';\r\nconst axios = require('axios').default\r\nconst clientId = '20193487866-88r5prmk0l03f52dsel598o3ts2udeti.apps.googleusercontent.com'\r\n\r\ntype Props = {}\r\n\r\nexport const Login: FC<Props> = () => {\r\n\r\n    const navigate = useNavigate()\r\n    const dispatcher = useAppDispatch()\r\n    const signUp = () => {\r\n        navigate(AppRoutes.REGISTRATION)\r\n    }\r\n    const theme = useTheme()\r\n    const [errorText, setErrorText] = useState('')\r\n\r\n    const initialFields: LogInFields = {\r\n        nameOrEmail: '',\r\n        password: ''\r\n    }\r\n\r\n    const [logInFields, setLogInFields] = useState<LogInFields>(initialFields)\r\n    const handleLogInFieldsInput = (fieldValue: string, propertyName: string) => {\r\n        setLogInFields({\r\n            ...logInFields,\r\n            [`${propertyName}`]: fieldValue\r\n        })\r\n        setErrorText('')\r\n    }\r\n\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n    const handleMouseDownPassword = () => setShowPassword(!showPassword);\r\n\r\n    useEffect(() => {\r\n        const initClient = () => {\r\n            gapi.auth2.init({\r\n                clientId: clientId,\r\n                scope: '',\r\n            });\r\n        };\r\n        gapi.load('client:auth2', initClient);\r\n\r\n    }, []);\r\n\r\n    const signIn = () => {\r\n        axios.post('http://localhost:1111/login', {\r\n            login: logInFields.nameOrEmail.split(' ').join(''),\r\n            password: logInFields.password\r\n        }).then(function (response: any) {\r\n            const currentToken = response['data']['token'];\r\n            const userData = JWT.verify(currentToken, 'secretKey1')\r\n            const jwtData = userData as JWT.JwtPayload\r\n            delete jwtData.exp\r\n            delete jwtData.iat\r\n            const name = jwtData['name']\r\n            const id = jwtData['id']\r\n            dispatcher(addToken({ id, name, currentToken, isAuth: true }))\r\n        })\r\n            .catch(function (error: any) {\r\n                setErrorText(error.response.data.error.message)\r\n            });\r\n    }\r\n\r\n    const onSuccess = async (response: any) => {\r\n        const id = response['googleId']\r\n        const name = response['wt']['Ad']\r\n        const email = response['profileObj']['email']\r\n        axios.post('http://localhost:1111/googlelogin', {\r\n            google_id: id,\r\n            name: name,\r\n            email: email\r\n        }).then(function (response: any) {\r\n            const currentToken = response['data']['token'];\r\n            const userData = JWT.verify(currentToken, 'secretKey1')\r\n            const jwtData = userData as JWT.JwtPayload\r\n            delete jwtData.exp\r\n            delete jwtData.iat\r\n            dispatcher(addToken({ id, name, currentToken, isAuth: true }))\r\n        })\r\n            .catch(function (error: any) {\r\n                setErrorText(error.response.data.error.message)\r\n            });\r\n    }\r\n\r\n    const onFailure = (error: any) => {\r\n        setErrorText(error.response.data.error.message);\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ justifyContent: 'center', display: 'grid', pt: { md: 15, xs: 4 } }}>\r\n            <Card variant='elevation' raised sx={{ maxWidth: '400px', display: 'flex', flexDirection: 'column' }}>\r\n                <Typography sx={{ display: 'flex', alignItems: 'center', fontSize: 22, mt: 3, justifyContent: 'center' }}>Hello! You need to sign in.</Typography>\r\n                <Box sx={{ margin: 5, mt: 0, display: 'grid' }}>\r\n                    <Typography variant=\"h6\" sx={{ m: 2, ml: 0 }}>E-mail</Typography>\r\n                    <TextField id=\"email\" variant=\"outlined\" label='Type your e-mail'\r\n                        onChange={(event) => handleLogInFieldsInput(event.target.value, 'nameOrEmail')}\r\n                        value={logInFields.nameOrEmail}\r\n                        error={(errorText) ? true : false}\r\n                        inputProps={{\r\n                            style: {\r\n                                WebkitBoxShadow: `0 0 0 1000px ${theme.palette.background.default} inset`,\r\n                            }\r\n                        }}\r\n                    />\r\n                    <Typography variant=\"h6\" sx={{ m: 2, ml: 0 }}>Password</Typography>\r\n                    <TextField id=\"password\" type={showPassword ? \"text\" : \"password\"} label='Type your password'\r\n                        onChange={(event) => handleLogInFieldsInput(event.target.value, 'password')}\r\n                        value={logInFields.password}\r\n                        error={(errorText) ? true : false}\r\n                        inputProps={{\r\n                            style: {\r\n                                WebkitBoxShadow: `0 0 0 1000px ${theme.palette.background.default} inset`,\r\n                            }\r\n                        }}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                        aria-label=\"toggle password visibility\"\r\n                                        onClick={handleClickShowPassword}\r\n                                        onMouseDown={handleMouseDownPassword}\r\n                                    >\r\n                                        {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            )\r\n                        }} />\r\n                    <Snackbar\r\n                        open={errorText ? true : false}\r\n                        key={errorText}\r\n                        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                    >\r\n                        <Alert severity=\"error\" variant=\"filled\" >{errorText}</Alert>\r\n                    </Snackbar>\r\n                    <Button variant='contained' onClick={signIn} size='large' sx={{ margin: 2, mt: 4 }}>\r\n                        Sign in\r\n                    </Button>\r\n                    <Box\r\n                        sx={{ margin: 2, mt: 0, display: 'grid' }}\r\n                    >\r\n                        <GoogleLogin\r\n                            clientId={clientId}\r\n                            buttonText=\"Sign in with Google\"\r\n                            onSuccess={onSuccess}\r\n                            onFailure={onFailure}\r\n                            cookiePolicy={'single_host_origin'}\r\n                        />\r\n                    </Box>\r\n                    <Divider sx={{ display: 'flex', alignItems: 'flex-start' }}>or</Divider>\r\n                    <Button variant='contained' onClick={signUp} size='large'\r\n                        sx={{ margin: 2 }}\r\n                    >Sign up\r\n                    </Button>\r\n                </Box>\r\n            </Card >\r\n        </Box >\r\n    )\r\n}","import { Card, CardActions, CardContent, Typography } from \"@mui/material\";\r\nimport React, { FC } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"./pages.css\"\r\nimport \"../service.helper\"\r\nimport { useAppSelector } from \"../redux/hooks\";\r\n\r\ntype Props = {}\r\n\r\nexport const Product: FC<Props> = () => {\r\n    const params = useParams()\r\n    const serverData = useAppSelector(state => state.persistedReducer.dataSlice.data)\r\n    const dataElement = serverData.find(el => el.id === params.productID)!\r\n\r\n    return (\r\n        <div>\r\n            <Card raised sx={{ maxWidth: 700, mt: 12, mb: 4, ml: { md: 10 }, mx: { xs: 3 } }}>\r\n                <CardContent>\r\n                    <Typography variant=\"h4\" sx={{ fontWeight: 'bold' }}>\r\n                        {dataElement.title}\r\n\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardContent sx={{ display: { md: '-webkit-inline-box', xs: \"flex\" }, flexDirection: { xs: 'column' }, alignItems: { xs: 'center' }, WebkitBoxAlign: { md: 'start' } }}>\r\n                    <img id='base64image' width={200} height={200} src={dataElement.image} />\r\n                    <CardActions sx={{ maxWidth: '400px', display: { md: 'block', xs: 'contents' }, padding: 0, pl: '20px' }}>\r\n                        <Typography sx={{ fontWeight: 'bold', mb: 4, mt: { xs: 4, md: 0 } }}>Description:</Typography>\r\n                        <Typography sx={{ textAlign: 'justify', mb: 4 }}>\r\n                            {dataElement.description}\r\n                        </Typography>\r\n                        <Typography sx={{ textAlign: 'justify' }}>\r\n                            Made of: {dataElement.material.join(', ')}\r\n                        </Typography>\r\n                    </CardActions>\r\n                </CardContent>\r\n                <CardContent>{dataElement.price}$</CardContent>\r\n            </Card>\r\n        </div >\r\n    )\r\n}","import React, { FC, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Alert, Box, Button, Card, IconButton, InputAdornment, Snackbar, TextField, Typography, useTheme } from '@mui/material';\r\nimport { AppRoutes } from \"../routerTypes\";\r\nimport \"./pages.css\"\r\nimport { blurInitialStateInterface, RegistrationFields } from \"../types\";\r\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\r\nimport JWT from 'jsonwebtoken'\r\nimport bcrypt from 'bcryptjs'\r\nimport { useAppDispatch } from \"../redux/hooks\";\r\nimport { addToken } from \"../redux/tokenReducer\";\r\nimport axios from \"axios\";\r\nconst salt = bcrypt.genSaltSync(10);\r\n\r\ntype Props = {}\r\n\r\nexport const Registration: FC<Props> = () => {\r\n    const navigate = useNavigate()\r\n    const dispatcher = useAppDispatch()\r\n    const back = () => {\r\n        navigate(AppRoutes.LOGIN)\r\n    }\r\n    const theme = useTheme()\r\n    const [errorText, setErrorText] = useState('')\r\n\r\n    const initialFields: RegistrationFields = {\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        passwordCheck: ''\r\n    }\r\n\r\n    const [registrationFields, setRegistrationFields] = useState<RegistrationFields>(initialFields)\r\n    const handleRegistrationFieldsInput = (fieldValue: string, propertyName: string) => {\r\n        setRegistrationFields({\r\n            ...registrationFields,\r\n            [`${propertyName}`]: fieldValue\r\n        })\r\n    }\r\n\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n    const handleMouseDownPassword = () => setShowPassword(!showPassword);\r\n    const [showPasswordCheck, setShowPasswordCheck] = useState(false);\r\n    const handleClickShowPasswordCheck = () => setShowPasswordCheck(!showPasswordCheck);\r\n    const handleMouseDownPasswordCheck = () => setShowPasswordCheck(!showPasswordCheck);\r\n\r\n    const validateEmail = (email: string) => {\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n        return re.test(email);\r\n    };\r\n    const validatePass = (pass: string) => {\r\n        const re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/\r\n        return re.test(pass);\r\n    };\r\n\r\n    const createAccountButton = () => {\r\n        axios.post('http://localhost:1111/registration', {\r\n            name: registrationFields.name.split(' ').join(''),\r\n            email: registrationFields.email.split(' ').join(''),\r\n            password: bcrypt.hashSync(registrationFields.password, salt)\r\n        }).then(function (response: any) {\r\n            const currentToken = response['data']['token'];\r\n            const userData = JWT.verify(currentToken, 'secretKey1')\r\n            const jwtData = userData as JWT.JwtPayload\r\n            delete jwtData.exp\r\n            delete jwtData.iat\r\n            const name = jwtData['name']\r\n            const id = jwtData['id']\r\n            dispatcher(addToken({ id, name, currentToken, isAuth: true }))\r\n        })\r\n            .catch(function (error: any) {\r\n                setErrorText(error.response.data.error.message)\r\n            });\r\n    }\r\n\r\n    const blurInitialState: blurInitialStateInterface = {\r\n        name: false,\r\n        email: false,\r\n        password: false,\r\n        passwordCheck: false\r\n    }\r\n    const [blur, setBlur] = useState<blurInitialStateInterface>(blurInitialState)\r\n    const onBlur = (propertyName: string, value: boolean) => {\r\n        setBlur({\r\n            ...blur,\r\n            [propertyName]: value\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ justifyContent: 'center', display: 'grid', pt: 8, mx: { xs: 0, md: 3 } }}>\r\n            <Typography variant=\"h4\" sx={{ textAlign: 'center' }}>Welcome!</Typography>\r\n            <Card variant='elevation' raised sx={{ height: 'auto', width: '400px', display: 'flex', flexDirection: 'column' }}>\r\n                <Box sx={{ margin: 6, mb: 1, display: 'grid' }}>\r\n                    <Typography variant=\"h6\" sx={{ m: 1, ml: 0, mb: 0 }}>Name</Typography>\r\n                    <Typography sx={{ m: 2, ml: 0, color: \"grey\", mt: 0, fontStyle: 'italic' }}>(at least 5 symbols)</Typography>\r\n                    <TextField id=\"name\" variant=\"outlined\" label='Name'\r\n                        onChange={(event) => {\r\n                            handleRegistrationFieldsInput(event.target.value, 'name')\r\n                        }}\r\n                        error={(blur.name === true && registrationFields.name.length < 5) ? true : false}\r\n                        onBlur={() => { onBlur('name', true) }}\r\n                        value={registrationFields.name}\r\n                        inputProps={{ style: { backgroundColor: theme.palette.action.hover } }}\r\n                    />\r\n                    {((blur.name === true && registrationFields.name.length < 5)) ? <Alert severity=\"error\">Invalid name</Alert>\r\n                        : <Box sx={{ height: '48px' }} />}\r\n                    <Typography variant=\"h6\" sx={{ m: 1, ml: 0 }}>E-mail</Typography>\r\n                    <TextField id=\"email\" variant=\"outlined\"\r\n                        label='Type your E-mail'\r\n                        onChange={(event) => {\r\n                            handleRegistrationFieldsInput(event.target.value, 'email')\r\n                        }}\r\n                        error={(blur.email === true && !validateEmail(registrationFields.email)) ? true : false}\r\n                        onBlur={() => { onBlur('email', true) }}\r\n                        value={registrationFields.email}\r\n                        inputProps={{ style: { backgroundColor: theme.palette.action.hover } }}\r\n                    />\r\n                    {(blur.email === true && !validateEmail(registrationFields.email)) ? <Alert severity=\"error\">Invalid email</Alert>\r\n                        : <Box sx={{ height: '48px' }} />}\r\n                    <Typography variant=\"h6\" sx={{ m: 1, ml: 0, mb: 0 }}>Password</Typography>\r\n                    <Typography sx={{ m: 1, ml: 0, color: \"grey\", mt: 0, fontStyle: 'italic' }}>(at least 8 symbols)</Typography>\r\n                    <TextField id=\"password\" variant=\"outlined\" type={showPassword ? \"text\" : \"password\"}\r\n                        onChange={(event) => {\r\n                            handleRegistrationFieldsInput(event.target.value, 'password')\r\n                        }}\r\n                        value={registrationFields.password}\r\n                        label='Password'\r\n                        onBlur={() => { onBlur('password', true) }}\r\n                        error={blur.password && !validatePass(registrationFields.password)}\r\n                        inputProps={{ style: { backgroundColor: theme.palette.action.hover } }}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                        aria-label=\"toggle password visibility\"\r\n                                        onClick={handleClickShowPassword}\r\n                                        onMouseDown={handleMouseDownPassword}\r\n                                    >\r\n                                        {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            )\r\n                        }} />\r\n                    <Typography variant=\"h6\" sx={{ m: 1, ml: 0 }}>Repeat password</Typography>\r\n                    <TextField id=\"passwordCheck\" variant=\"outlined\" type={showPasswordCheck ? \"text\" : \"password\"}\r\n                        onChange={(event) => {\r\n                            handleRegistrationFieldsInput(event.target.value, 'passwordCheck')\r\n                        }}\r\n                        value={registrationFields.passwordCheck}\r\n                        label='Password Check'\r\n                        error={blur.passwordCheck && !validatePass(registrationFields.passwordCheck)}\r\n                        onBlur={() => { onBlur('passwordCheck', true) }}\r\n                        inputProps={{ style: { backgroundColor: theme.palette.action.hover } }}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                        aria-label=\"toggle password visibility\"\r\n                                        onClick={handleClickShowPasswordCheck}\r\n                                        onMouseDown={handleMouseDownPasswordCheck}\r\n                                    >\r\n                                        {showPasswordCheck ? <Visibility /> : <VisibilityOff />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            )\r\n                        }} />\r\n                    {(registrationFields.password.length > 0 && registrationFields.passwordCheck.length > 0 && !validatePass(registrationFields.password) && ((blur.passwordCheck) || (blur.password)))\r\n                        ? <Alert severity=\"error\">Invalid password</Alert>\r\n                        : (blur.password && (registrationFields.password !== registrationFields.passwordCheck) && registrationFields.password.length > 0 && registrationFields.passwordCheck.length > 0)\r\n                            ? <Alert severity=\"error\">Both fields should be identical</Alert>\r\n                            : (validatePass(registrationFields.password) && validatePass(registrationFields.passwordCheck) && registrationFields.password === registrationFields.passwordCheck)\r\n                                ? <Alert severity=\"success\">Password is Ok</Alert>\r\n                                : <Box sx={{ height: '48px' }} />}\r\n                </Box>\r\n                <Button variant='contained'\r\n                    disabled={(!validateEmail(registrationFields.email) || !validatePass(registrationFields.password) || registrationFields.passwordCheck !== registrationFields.password || registrationFields.name.length < 5) ? true : false}\r\n                    onClick={createAccountButton}\r\n                    color='primary' size='large'\r\n                    sx={{ mx: 2 }}>Create an account</Button>\r\n                <Button variant='contained' onClick={back} color='success' size='large'\r\n                    sx={{ m: 2, mb: 0 }}\r\n                >I already have an account</Button>\r\n                <Snackbar\r\n                    open={errorText ? true : false}\r\n                    key={errorText}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                >\r\n                    <Alert severity=\"error\" variant=\"filled\" >{errorText}</Alert>\r\n                </Snackbar>\r\n                {((!validatePass(registrationFields.password) || !validatePass(registrationFields.passwordCheck)) && blur.password) ? <Alert severity=\"info\">The password should contain at least one uppercase letter, one lowercase letter and one digit</Alert> : <Box sx={{ height: '68px' }} />}\r\n            </Card>\r\n        </Box>\r\n    )\r\n}","import { Typography } from \"@mui/material\";\r\nimport React, { FunctionComponent, useEffect, useState } from \"react\";\r\n\r\ntype Time = {}\r\n\r\nexport const Time: FunctionComponent<Time> = () => {\r\n\r\n    const [time, setTime] = useState('')\r\n    useEffect(() => { setInterval(() => { setTime(new Date().toLocaleTimeString()) }, 1000) })\r\n\r\n    return (\r\n        <Typography\r\n            component=\"div\" sx={{ mr: 3, display: { lg: 'block', xs: 'none' } }}>{new Date().toLocaleDateString()} {time}</Typography>\r\n    )\r\n}","import { useEffect, useState } from 'react'\r\n\r\nfunction useDebounce<T>(value: T, delay?: number): T {\r\n    const [debouncedValue, setDebouncedValue] = useState<T>(value)\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => setDebouncedValue(value), delay || 500)\r\n\r\n        return () => {\r\n            clearTimeout(timer)\r\n        }\r\n    }, [value, delay])\r\n\r\n    return debouncedValue\r\n}\r\n\r\nexport default useDebounce\r\n","import { PaletteMode } from '@mui/material'\r\nimport { createSlice } from '@reduxjs/toolkit'\r\n\r\ninterface ThemeState {\r\n    mode: PaletteMode\r\n}\r\n\r\nconst initialState: ThemeState = { mode: 'light' }\r\nconst themeSlice = createSlice({\r\n    name: 'theme',\r\n    initialState,\r\n    reducers: {\r\n        currentTheme(state: ThemeState, action: { payload: PaletteMode }) {\r\n            state.mode = action.payload\r\n        },\r\n    }\r\n})\r\n\r\nexport const { currentTheme } = themeSlice.actions\r\nexport default themeSlice.reducer","import * as React from 'react';\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { FunctionComponent, useEffect, useState } from 'react';\r\nimport { AppBar, Button, Dialog, DialogActions, DialogTitle, IconButton, Link } from '@mui/material';\r\nimport { useAppDispatch, useAppSelector } from '../redux/hooks';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { clearDataSlice, searchTitleReducer } from '../redux/dataReducer';\r\nimport { deleteToken } from '../redux/tokenReducer';\r\nimport { AppRoutes } from '../routerTypes';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport DarkModeSharpIcon from '@mui/icons-material/DarkModeSharp';\r\nimport { clearCartSlice } from '../redux/cartReducer';\r\nimport { Time } from './Time';\r\nimport { OrderButton } from './OrderButton';\r\nimport useDebounce from './Hooks';\r\nimport LightModeIcon from '@mui/icons-material/LightMode';\r\nimport { currentTheme } from '../redux/themeReducer';\r\n\r\ntype HeaderProps = {}\r\n\r\nconst Search = styled('div')(({ theme }) => ({\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('xs')]: {\r\n        marginLeft: theme.spacing(1),\r\n        width: 'auto',\r\n    },\r\n}));\r\n\r\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n    color: 'inherit',\r\n    '& .MuiInputBase-input': {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n        width: '100%',\r\n    },\r\n}));\r\n\r\nexport const Header: FunctionComponent<HeaderProps> = () => {\r\n    const page = useAppSelector(state => state.persistedReducer.pageSlice.page)\r\n    const mode = useAppSelector(state => state.persistedReducer.themeSlice.mode)\r\n    const nav = useLocation()\r\n    const currentHeadLine = () => {\r\n        switch (nav.pathname) {\r\n            case `/catalogue/page=${page}`:\r\n                return 'Catalogue'\r\n            case '/order':\r\n                return 'Order'\r\n            default:\r\n                return 'Product'\r\n        }\r\n    }\r\n    const goHome = () => {\r\n        navigate(AppRoutes.LOGIN)\r\n    }\r\n    const navigate = useNavigate()\r\n    const dispatcher = useAppDispatch()\r\n    const tokenState = useAppSelector(state => state.persistedReducer.tokenSlice)\r\n    const [searchTitle, setSearchTitle] = useState<string>('')\r\n    const debouncedValue = useDebounce<string>(searchTitle, 1000)\r\n    const handleSearchInputChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n        setSearchTitle(event.target.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatcher(searchTitleReducer(searchTitle))\r\n    }, [debouncedValue])\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const logOut = () => {\r\n        dispatcher(clearCartSlice())\r\n        dispatcher(clearDataSlice())\r\n        dispatcher(deleteToken())\r\n        setOpen(false)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        (nav.pathname !== '/' && nav.pathname !== '/registration') ?\r\n            <AppBar className='_header' position=\"fixed\">\r\n                <Toolbar>\r\n                    <IconButton onClick={() => {\r\n                        dispatcher(currentTheme(mode === 'dark' ? 'light' : 'dark'))\r\n                    }}>\r\n                        {(mode === 'light')\r\n                            ? <DarkModeSharpIcon color='action' />\r\n                            : <LightModeIcon />}\r\n                    </IconButton>\r\n                    {(nav.pathname !== `/catalogue/page=${page}`) ?\r\n                        <IconButton aria-label='home'\r\n                            onClick={goHome}>\r\n                            <HomeIcon fontSize='large' />\r\n                        </IconButton> : null}\r\n                    <Link component=\"button\" onClick={logOut}></Link>\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                        component=\"div\"\r\n                        sx={{ flexGrow: 1, mx: 3 }}\r\n                    >\r\n                        {currentHeadLine()}\r\n                    </Typography>\r\n                    <Time />\r\n                    <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\r\n                        <OrderButton />\r\n                    </Box >\r\n                    <Box sx={{ display: 'flex' }}>\r\n                        {\r\n                            (nav.pathname === `/catalogue/page=${page}`) ?\r\n                                <Search>\r\n                                    <SearchIconWrapper>\r\n                                        <SearchIcon />\r\n                                    </SearchIconWrapper>\r\n                                    <StyledInputBase\r\n                                        placeholder=\"Search…\"\r\n                                        inputProps={{ 'aria-label': 'search' }}\r\n                                        onChange={handleSearchInputChange}\r\n                                        value={searchTitle}\r\n                                        autoFocus={true}\r\n                                    />\r\n                                </Search>\r\n                                :\r\n                                null\r\n                        }\r\n                        <Box sx={{ display: 'flex', flexDirection: 'row', maxWidth: '300px' }}>\r\n                            <Typography\r\n                                variant=\"h6\"\r\n                                sx={{ display: \"flex\", alignItems: 'center', ml: 4, overflow: 'hidden' }}\r\n                            >\r\n                                {tokenState.name}\r\n                            </Typography>\r\n                            <Link component=\"button\" onClick={() => { setOpen(true) }} sx={{ color: 'white', mx: 1, whiteSpace: 'nowrap' }} > (Log out)</Link>\r\n                            <Dialog\r\n                                disableScrollLock\r\n                                open={open}\r\n                                onClose={() => { setOpen(false) }}\r\n                                aria-describedby=\"alert-dialog-log-out\"\r\n                            >\r\n                                <DialogTitle>Are you sure you want to leave?</DialogTitle>\r\n                                <DialogActions>\r\n                                    <Button autoFocus onClick={logOut}>Yes</Button>\r\n                                    <Button onClick={() => setOpen(false)}>Cancel</Button>\r\n                                </DialogActions>\r\n                            </Dialog>\r\n                        </Box>\r\n                    </Box>\r\n                </Toolbar>\r\n            </AppBar> : null\r\n    )\r\n}\r\n","import { Routes, Route, Navigate } from \"react-router-dom\";\r\nimport { AppRoutes } from \"./routerTypes\";\r\nimport { Order, Login, Catalogue } from \"./Pages\";\r\nimport { Product } from \"./Pages/Product\";\r\nimport React from 'react';\r\nimport { Registration } from \"./Pages/Registration\";\r\nimport { useAppSelector } from \"./redux/hooks\";\r\nimport { Header } from \"./components/Header\";\r\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport { getDesignTokens } from \"./service.helper\";\r\nimport { PaletteMode } from \"@mui/material\";\r\n\r\n\r\nexport function Router() {\r\n    const tokenState = useAppSelector(state => state.persistedReducer.tokenSlice).isAuth\r\n    const page = useAppSelector(state => state.persistedReducer.pageSlice.page)\r\n    const reducerTheme = useAppSelector<PaletteMode>(state => state.persistedReducer.themeSlice.mode)\r\n    let theme = createTheme((getDesignTokens(reducerTheme)))\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <CssBaseline />\r\n            <Header />\r\n            <Routes >\r\n                <Route path={AppRoutes.LOGIN} element={(!tokenState) ? <Login /> : <Navigate to={`/catalogue/page=${page}`} replace={true} />} />\r\n                <Route path={AppRoutes.REGISTRATION} element={(!tokenState) ? <Registration /> : <Navigate to={`/catalogue/page=${page}`} replace={true} />} />\r\n                <Route path={`${AppRoutes.CATALOGUE}/page=${page}`} element={(tokenState) ? <Catalogue /> : <Navigate to=\"/\" replace={true} />} />\r\n                <Route path={AppRoutes.ORDER} element={(tokenState) ? <Order /> : <Navigate to=\"/\" replace={true} />} />\r\n                <Route path={`${AppRoutes.PRODUCT}/:productID`} element={(tokenState) ? <Product /> : <Navigate to=\"/\" replace={true} />} />\r\n            </Routes>\r\n        </ThemeProvider>\r\n    )\r\n}","import { configureStore, combineReducers } from '@reduxjs/toolkit';\r\nimport cartSlice from './cartReducer';\r\nimport dataSlice from './dataReducer';\r\nimport tokenSlice from './tokenReducer';\r\nimport pageSlice from './pageReducer';\r\nimport themeSlice from './themeReducer';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { persistReducer, persistStore } from 'redux-persist';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  version: 1\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n  cartSlice,\r\n  dataSlice,\r\n  tokenSlice,\r\n  pageSlice,\r\n  themeSlice\r\n})\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\nexport const store = configureStore(\r\n  {\r\n    reducer: {\r\n      persistedReducer\r\n    }\r\n  });\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport const persistor = persistStore(store)\r\n\r\n","import React from 'react';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Router } from './Router';\r\nimport { createRoot } from 'react-dom/client';\r\nimport { store } from './redux/store'\r\nimport { Provider } from 'react-redux'\r\nimport { persistor } from './redux/store'\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nconst container = document.getElementById('root');\r\nconst root = createRoot(container!); // createRoot(container!) if you use TypeScript\r\n\r\nroot.render(\r\n  <React.Fragment>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <BrowserRouter>\r\n          <Router />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.Fragment>);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}